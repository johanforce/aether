plugins {
    id 'com.android.application'
    //plugin kotlin
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    //plugin firebase
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    //plugin detekt
    id "io.gitlab.arturbosch.detekt" version "1.21.0"
    //plugin hilt dagger
    id 'dagger.hilt.android.plugin'
    id 'com.google.dagger.hilt.android'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    namespace 'com.jarvis.weatherj'
    compileSdk 33

    defaultConfig {
        multiDexEnabled true
        applicationId "com.jarvis.weatherj"
        minSdk 28
        targetSdk 33
        versionCode 3
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'env'
    productFlavors {
        develop {
            dimension "env"
            applicationId "com.jarvis.weatherj"
            buildConfigField "String", "BASE_URL","\"http://wttr.in/\""
            resValue "string", "app_name", "(dev) WeatherJ"
        }

        staging {
            dimension "env"
            applicationId "com.jarvis.weatherj"
            buildConfigField "String", "BASE_URL","\"http://wttr.in/\""
            resValue "string", "app_name", "(stg) WeatherJ"
        }

        product {
            dimension "env"
            applicationId "com.jarvis.weatherj"
            buildConfigField "String", "BASE_URL","\"http://wttr.in/\""
            resValue "string", "app_name", "WeatherJ"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    lintOptions {
        disable 'GradleDependency'
        disable 'UnusedResources'
        abortOnError false
        checkReleaseBuilds false
    }

    dataBinding {
        enabled = true
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    //local lib
    implementation project(':locale_helper')

    //chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    //Swipere fresh layout
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //Sphash Api
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha01'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Retrofit, RxJava, Gson
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    //recycleview
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    // Room
    def room_version  = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // ViewModel and LiveData
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    //viewmodels extension
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0-alpha04'

    //Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    //paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    //MainApplication
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "com.github.haroldadmin:NetworkResponseAdapter:4.2.2"

    // firebase
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'

    //Shared Pref lib Tencent
    implementation 'com.tencent:mmkv:1.2.15'

    //work manager
    implementation "androidx.work:work-runtime-ktx:2.8.0"
    implementation "androidx.hilt:hilt-work:1.0.0"
}